Usage: python peakzilla.py [OPTIONS] IP_ALIGNMENT CONTROL_ALIGNMENT > RESULTS

Options:
  -h, --help            show this help message and exit
  -s FRAGMENT_SIZE, --fragment_size=FRAGMENT_SIZE
                        fragment size in bp used to define the upper limit of
                        peak size for modeling: default=200
  -m MODEL_THRESHOLD, --model_threshold=MODEL_THRESHOLD
                        fold enrichment threshold over average read density
                        for building the peak model: default=120
  -t PEAK_THRESHOLD, --peak_threshold=PEAK_THRESHOLD
                        fold enrichment threshold over average read density
                        for finding candidate peaks: default=40
  -f FDR, --fdr=FDR     cutoff for the estimated FDR value: default = 1
  -q, --quiet           don't print status messages


DEPENDENCIES
------------
* Runs on all Unix-like operating systems.
* Requires Python 2.5 or greater and NumPy.


INPUT FORMAT
------------
Peakzilla accepts BED formated alignments as input.

For converstion to BED format and working with BED files and alignments in
general I highly reccommend:

* bowtie (http://bowtie-bio.sourceforge.net/)
* SAMtools (http://samtools.sourceforge.net/)
* bedtools (http://code.google.com/p/bedtools/)


WORKFLOW EXAMPLE
----------------
# use bowtie to map uniquely mappable reads to the genome
bowtie -p4 -m1 --sam genome_index input.fastq input.sam
bowtie -p4 -m1 --sam genome_index chip.fastq chip.sam

# convert to BAM format
samtools view -bS input.sam > input.bam
samtools view -bS chip.sam > chip.bam

# conmvert to BED format
bamToBed -i input.bam > input.bed
bamToBed -i chip.bam > chip.bed

# run peakzilla
python peakzilla.py chip.bed input.bed > chip_results.tsv


OPTIONS
-------
Usage of the options should not be required! Reasonable values for
MODEL_THRESHOLD and PEAK_THRESHOLD variable are found by the program.
Setting them to a value previously found by a run on a similar dataset
improves performance.


OUTPUT FORMAT
-------------
* Results are printed as a table of tab separated values to stdout.
* Status messages are printed to stderr. 

