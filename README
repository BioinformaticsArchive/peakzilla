PEAKZILLA
---------
Peakzilla identifies sites of enrichment and transcription factor binding sites from transcription factor ChIP-seq and ChIP-exo experiments at hight accuracy and resolution. It is designed to perform equally well for data from any species. All necessary parameters are estimated from the data. Peakzilla is suitable for both single and paired end data from any sequencing platform.


USAGE
-----
Options:
  -h, --help            show this help message and exit
  -m N_MODEL_PEAKS, --model_peaks=N_MODEL_PEAKS
                        number of most highly enriched regions used to
                        estimate peak size: default = 200
  -c ENRICHMENT_CUTOFF, --enrichment_cutoff=ENRICHMENT_CUTOFF
                        minimum cutoff for fold enrichment: default = 2
  -s SCORE_CUTOFF, --score_cutoff=SCORE_CUTOFF
                        minimum cutoff for peak score: default = 1
  -e, --gaussian        use empirical model estimate instead of gaussian
  -p, --bedpe           input is paired end and in BEDPE format
  -l LOG, --log=LOG     directory/filename to store log file to: default =
                        log.txt
  -n, --negative        write negative peaks to negative_peaks.tsv


DEPENDENCIES
------------
* Runs on OSX and Linux based operating systems
* Requires Python 2.5 or greater
* For 2x better perormance use PyPy instead of CPython


INPUT FORMAT
------------
Peakzilla accepts BED formated alignments as input.

For converstion to BED format and working with BED files and alignments in
general I highly reccommend:

* bowtie (http://bowtie-bio.sourceforge.net/)
* SAMtools (http://samtools.sourceforge.net/)
* bedtools (http://code.google.com/p/bedtools/)


WORKFLOW EXAMPLE
----------------
# use bowtie to map uniquely mappable reads to the genome
bowtie -p4 -m1 --sam genome_index input.fastq input.sam
bowtie -p4 -m1 --sam genome_index chip.fastq chip.sam

# convert to BAM format
samtools view -bS input.sam > input.bam
samtools view -bS chip.sam > chip.bam

# convert to BED format
bamToBed -i input.bam > input.bed
bamToBed -i chip.bam > chip.bed

# run peakzilla
python peakzilla.py chip.bed input.bed > chip_results.tsv


OPTIONS
-------
One of peakzilla's design goals is to learn all the necessary information
from the data. The usage of the options should therefore not be required.

OUTPUT FORMAT
-------------
* Results are printed as a table of tab delimited values to stdout
* Logs are appended to logs.txt in the current directory or a custom directory/filename specified by the -l option
* Enriched regions in the control sample are written to negative_peaks.tsv or a custom directory/filename specified by the -n option

